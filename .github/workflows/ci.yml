name: CI Builds

on: push

env:
  DUNE_COPASI_USE_STATIC_DEPS: 'ON'

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-18.04
    env:
      CMAKE_INSTALL_PREFIX: '/opt/smelibs'
      TERM: 'xterm-256color'
    defaults:
      run:
        shell: bash
    steps:
    - name: Set OS
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100
        sudo apt-get install libncurses5-dbg
    - uses: actions/checkout@v2
    - name: Setup static dependencies
      run: ./.ci/setup_static_deps $PWD/dune-copasi.opts
    - name: Setup dune dependencies
      run: ./.ci/setup_dune $PWD/dune-copasi.opts
    - name: Build and Install
      run: ./.ci/install $PWD/dune-copasi.opts
    - name: Build and run tests
      run: ./.ci/test $PWD/dune-copasi.opts
    # - uses: actions/upload-artifact@v2
    #   with:
    #     path: ./artefacts/*

  macos:
    name: MacOS
    runs-on: macos-10.15
    env:
      CMAKE_INSTALL_PREFIX: '/opt/smelibs'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
      DUNE_USE_FALLBACK_FILESYSTEM: 'ON'
      TERM: 'xterm-256color'
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Setup static dependencies
        run: ./.ci/setup_static_deps $PWD/dune-copasi.opts
      - name: Setup dune dependencies
        run: ./.ci/setup_dune $PWD/dune-copasi.opts
      - name: Build and Install
        run: ./.ci/install $PWD/dune-copasi.opts
      - name: Build and run tests
        run: ./.ci/test $PWD/dune-copasi.opts
      # - uses: actions/upload-artifact@v2
      #   with:
      #     path: ./artefacts/*

  win64:
    name: Windows 64-bit
    runs-on: windows-2019
    env:
      CMAKE_INSTALL_PREFIX: '/c/smelibs'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake make git dos2unix
      - name: Setup static dependencies
        run: ./.ci/setup_static_deps $PWD/dune-copasi.opts
      - name: Setup dune dependencies
        run: ./.ci/setup_dune $PWD/dune-copasi.opts
      - name: Build and Install
        run: ./.ci/install $PWD/dune-copasi.opts
      - name: Build and run tests
        run: ./.ci/test $PWD/dune-copasi.opts
      # - uses: actions/upload-artifact@v2
      #   with:
      #     path: ./artefacts/*

  win32:
    name: Windows 32-bit
    runs-on: windows-2019
    env:
      CMAKE_INSTALL_PREFIX: '/c/smelibs'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: mingw-w64-i686-gcc mingw-w64-i686-cmake make git dos2unix
      - name: Setup static dependencies
        run: ./.ci/setup_static_deps $PWD/dune-copasi.opts
      - name: Setup dune dependencies
        run: ./.ci/setup_dune $PWD/dune-copasi.opts
      - name: Build and Install
        run: ./.ci/install $PWD/dune-copasi.opts
      - name: Build and run tests
        run: ./.ci/test $PWD/dune-copasi.opts
      # - uses: actions/upload-artifact@v2
      #   with:
      #     path: ./artefacts/*

  # release:
  #   name: Upload Binaries to GitHub Release
  #   needs: [linux, macos, win64, win32]
  #   runs-on: ubuntu-18.04
  #   # upload binaries to github release if commit is tagged
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: binaries
  #     - name: Upload binaries to release
  #       uses: svenstaro/upload-release-action@v2
  #       with:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         file: binaries/*
  #         tag: ${{ github.ref }}
  #         overwrite: true
  #         file_glob: true
