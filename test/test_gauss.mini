# Test: Check that the first steps of a pure diffusive problem evolve as a
#   gaussian process

import default_logging.ini
import default_time_stepping.ini

_diffusion = 0.005
_t0 = 1.
_gauss_eq = exp(-((x-0.5)^2+(y-0.5)^2)/(4*t*{_diffusion})) / (4*pi*t*{_diffusion})
_geometry_type = cubes, triangles | expand geometry_type

__name = test_gauss_{_geometry_type}

[grid]
dimension = 2
file = grids/square_{_geometry_type}.msh
initial_level = 4

[model]
order = 0, 1 | expand geometry_type

[model.time_stepping]
begin = {_t0}
# Force timestepper to adapt last timestep without error
end = 2.01
initial_step = 0.02
min_step = 0.02
max_step = 0.02

[model.writer]
file_path = {__name}

[model.compartments]
domain = 0

############################ Model for domain ############################
[model.domain.initial]
u = {_gauss_eq}

[model.domain.reaction]
u = 0

[model.domain.reaction.jacobian]
du__du = 0

[model.domain.diffusion]
u = {_diffusion}

#### compare against a known solution
[model.domain.compare.expression]
u = {_gauss_eq}
[model.domain.compare.l2_error]
u = 0.255 , 0.076 | expand geometry_type
